{
  "version": 3,
  "sources": [
    "vector.js",
    "probe.js",
    "consts.js",
    "display.js",
    "targets.js",
    "mission.js",
    "panels.js",
    "scope.js",
    "splash.js",
    "controller.js",
    "game.js",
    "app.js"
  ],
  "names": [
    "P83Vector",
    "x",
    "y",
    "a",
    "b",
    "other",
    "zero",
    "P83Probe",
    "position",
    "Vector",
    "speed",
    "thrust_id",
    "acc",
    "Math",
    "floor",
    "add",
    "equal",
    "toString",
    "colors",
    "red",
    "green",
    "light",
    "blue",
    "P83Title",
    "parent",
    "pos",
    "size",
    "title",
    "root",
    "ctx",
    "unit",
    "titleWidth",
    "measureText",
    "width",
    "fillStyle",
    "shadowBlur",
    "font",
    "textAlign",
    "textBaseline",
    "fillText",
    "lineWidth",
    "strokeStyle",
    "beginPath",
    "moveTo",
    "lineTo",
    "stroke",
    "P83LED",
    "lit",
    "blinking",
    "nbTimeouts",
    "shadowColor",
    "arc",
    "PI",
    "fill",
    "state",
    "draw",
    "setTimeout",
    "blink",
    "document",
    "getElementById",
    "volume",
    "play",
    "P83Button",
    "text",
    "on_cb",
    "off_cb",
    "on",
    "off",
    "active",
    "col",
    "fillRect",
    "strokeRect",
    "is_active",
    "dx",
    "dy",
    "bind",
    "call",
    "P83MenuItem",
    "button",
    "onClick",
    "P83Display",
    "value",
    "length",
    "substring",
    "P83Input",
    "id",
    "cb",
    "callback",
    "input",
    "addEventListener",
    "onInput",
    "onKeyup",
    "authorizedChars",
    "popping",
    "canvas",
    "style",
    "left",
    "offsetLeft",
    "top",
    "offsetTop",
    "height",
    "backgroundColor",
    "color",
    "textShadow",
    "border",
    "correct",
    "char",
    "indexOf",
    "event",
    "key",
    "pop",
    "parseInt",
    "slice",
    "shown",
    "visibility",
    "zIndex",
    "P83Number",
    "NaN",
    "display",
    "sign",
    "digits",
    "isNaN",
    "i",
    "P83Targets",
    "positions",
    "isTrackingOk",
    "checked",
    "push",
    "probe",
    "checkState",
    "CHECK_STATE_POSITION",
    "isMotionless",
    "CHECK_STATE_BOTH",
    "nbChecked",
    "a_code",
    "charCodeAt",
    "map",
    "p",
    "String",
    "fromCharCode",
    "join",
    "filter",
    "Boolean",
    "Symbol",
    "CHECK_STATE_NONE",
    "P83TargetSelector",
    "mission",
    "led",
    "numX",
    "numY",
    "buttons",
    "select",
    "w",
    "h",
    "idx",
    "nbTargets",
    "selected",
    "targets",
    "P83Mission",
    "name",
    "code",
    "diagAllowed",
    "trackingAllowed",
    "oxygen",
    "Probe",
    "diagonalAllowed",
    "oxygenStartLevel",
    "sequence",
    "isSpeedOk",
    "isAchieved",
    "toFixed",
    "accelerate",
    "check",
    "Targets",
    "checkAll",
    "trimLines",
    "targetsString",
    "checkedString",
    "oxygenLevel",
    "split",
    "l",
    "trim",
    "P83XYPanel",
    "vector",
    "diod",
    "P83StatusPanel",
    "oxygenLED",
    "oxygenNum",
    "trackingLED",
    "P83ThrustPanel",
    "move_cb",
    "move_callback",
    "copy",
    "pos1",
    "pos2",
    "pos3",
    "drawArrow",
    "P83SequencePanel",
    "sequenceInput",
    "setup",
    "show",
    "P83MissionPanel",
    "quit_cb",
    "quitCallback",
    "printMenuItem",
    "print",
    "quitMenuItem",
    "quit",
    "window",
    "open",
    "encodeURI",
    "P83Scope",
    "t",
    "xPositions",
    "min_x",
    "min",
    "max_x",
    "max",
    "yPositions",
    "min_y",
    "max_y",
    "scale",
    "cx",
    "cy",
    "intensity",
    "tick_x",
    "ceil",
    "tick_y",
    "primary_size",
    "pow",
    "log10",
    "drawGrid",
    "isProbe",
    "isSelected",
    "isChecked",
    "closePath",
    "drawElement",
    "forEach",
    "tgt",
    "computeDimensions",
    "drawFullGrids",
    "drawProbe",
    "drawTargets",
    "P83Splash",
    "menuItem",
    "P83Controller",
    "missionData",
    "thrustPanel",
    "move",
    "speedPanel",
    "positionPanel",
    "scope",
    "statusPanel",
    "targetSelector",
    "sequencePanel",
    "missionPanel",
    "splash",
    "children",
    "thrust",
    "P83Game",
    "canvasId",
    "dataId",
    "data",
    "JSON",
    "parse",
    "innerText",
    "getContext",
    "GAME_STATE_MISSION",
    "controller",
    "done",
    "headers",
    "Headers",
    "append",
    "fetch",
    "location",
    "pathname",
    "method",
    "body",
    "stringify",
    "user",
    "level",
    "then",
    "r",
    "status",
    "catch",
    "e",
    "resize",
    "pageX",
    "pageY",
    "innerWidth",
    "innerHeight",
    "GAME_STATE_MAP",
    "game",
    "Game"
  ],
  "mappings": "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",
  "file": "app.js",
  "sourceRoot": "..",
  "sourcesContent": [
    "export default class P83Vector {\n  static add(a, b) {\n    return new P83Vector(a.x + b.x, a.y + b.y);\n  }\n\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  equal(other) {\n    return this.x === other.x && this.y === other.y;\n  }\n\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(other) {\n    this.x += other.x;\n    this.y += other.y;\n  }\n\n  copy() {\n    return new P83Vector(this.x, this.y);\n  }\n\n  toString() {\n    return `P83Vector(${this.x}, ${this.y})`;\n  }\n}\n\nP83Vector.zero = new P83Vector(0, 0);\n",
    "import Vector from \"./vector.js\";\n\nexport default class P83Probe {\n  constructor() {\n    this.position = new Vector(0, 0);\n    this.speed = new Vector(0, 0);\n  }\n\n  accelerate(thrust_id) {\n    const acc = new Vector((thrust_id-1)%3 - 1, Math.floor((thrust_id-1)/3)-1);\n    this.speed.add(acc);\n    this.position.add(this.speed);\n  }\n\n  isMotionless() {\n    return this.speed.equal(Vector.zero);\n  }\n\n  toString() {\n    return `SPEED: ${this.speed.toString()}\\nPOSITION: ${this.position.toString()}`;\n  }\n}\n",
    "export const colors = {\n  red: [\"#ff0000\", \"#ff8080\", \"#100000\"],\n  green: [\"#00ff00\", \"#80ff80\", \"#001000\"],\n  light: [\"#80ff80\", \"#80ff80\", \"#001000\"],\n  blue: [\"#0000ff\", \"#8080ff\", \"#000010\"]\n};\n",
    "import { colors } from \"./consts.js\";\nimport Vector from \"./vector.js\";\n\nexport class P83Title {\n  constructor(parent, pos, size, title) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.size = size;\n    this.title = title;\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n    const titleWidth = ctx.measureText(this.title).width;\n    ctx.fillStyle = colors.light[0];\n    ctx.shadowBlur = 0;\n    ctx.font = \"\" + Math.floor(unit * 0.8) + \"px Liberation\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillText(this.title, (this.pos.x + 2) * unit, (this.pos.y + 1) * unit);\n    //\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = colors.light[0];\n    ctx.beginPath();\n    ctx.moveTo((this.pos.x + 1.5) * unit, (this.pos.y + 1) * unit);\n    ctx.lineTo((this.pos.x + 1) * unit, (this.pos.y + 1) * unit);\n    ctx.lineTo((this.pos.x + 1) * unit, (this.pos.y + 2) * unit);\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.moveTo((this.pos.x + 2.5) * unit + titleWidth, (this.pos.y + 1) * unit);\n    ctx.lineTo((this.pos.x + this.size.x - 1) * unit, (this.pos.y + 1) * unit);\n    ctx.lineTo((this.pos.x + this.size.x - 1) * unit, (this.pos.y + 2) * unit);\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.moveTo((this.pos.x + 1) * unit, (this.pos.y + this.size.y - 2) * unit);\n    ctx.lineTo((this.pos.x + 1) * unit, (this.pos.y + this.size.y - 1) * unit);\n    ctx.lineTo((this.pos.x + this.size.x - 1) * unit, (this.pos.y + this.size.y - 1) * unit);\n    ctx.lineTo((this.pos.x + this.size.x - 1) * unit, (this.pos.y + this.size.y - 2) * unit);\n    ctx.stroke();\n  }\n}\n\nexport class P83LED {\n  constructor(parent, pos) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.lit = true;\n    this.blinking = false;\n    this.nbTimeouts = 0;\n    this.colors = colors.green;\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n\n    if (this.lit) {\n      ctx.fillStyle = this.colors[0];\n      ctx.strokeStyle = this.colors[0];\n      ctx.shadowBlur = unit;\n      ctx.shadowColor = this.colors[1];\n    } else {\n      ctx.strokeStyle = \"#101010\";\n      ctx.fillStyle = this.colors[2];\n      ctx.shadowBlur = 0;\n    }\n\n    ctx.beginPath();\n    ctx.arc(unit * this.pos.x, unit * this.pos.y, unit / 3, 0, 2 * Math.PI);\n    ctx.stroke();\n    ctx.fill();\n  }\n\n  blink(state) {\n    if (!this.blinking) return;\n    switch (state) {\n      case 0:\n        this.lit = true;\n        this.parent.draw();\n        break;\n      case 1:\n        if (this.nbTimeouts === 0) {\n          this.nbTimeouts = 1;\n          setTimeout(() => this.blink(2));\n        }\n        break;\n      case 2:\n        this.nbTimeouts--;\n        if (this.nbTimeouts > 0) return;\n        this.lit = !this.lit;\n        this.parent.draw();\n        if (this.lit) {\n          document.getElementById(\"blip\").volume = 0.01;\n          document.getElementById(\"blip\").play();\n        }\n        this.nbTimeouts = 1;\n        setTimeout(() => this.blink(2), 300);\n        break;\n    }\n  }\n}\n\nexport class P83Button {\n  constructor(parent, pos, size, text, on_cb, off_cb) {\n    this.root = parent.root;\n    this.pos = pos;\n    this.size = size;\n    this.text = text;\n    this.on = on_cb;\n    this.off = off_cb;\n    this.active = true;\n    this.lit = false;\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n    let col = colors.light;\n\n    if (this.active) {\n      if (this.lit) {\n        col = colors.green;\n      }\n      ctx.shadowBlur = unit / 2;\n      ctx.fillStyle = col[2];\n      ctx.strokeStyle = col[0];\n      ctx.shadowColor = col[1];\n    } else {\n      ctx.strokeStyle = \"#101010\";\n      ctx.fillStyle = col[2];\n      ctx.shadowBlur = 0;\n    }\n    ctx.fillRect(this.pos.x * unit, this.pos.y * unit, this.size.x * unit, this.size.y * unit);\n    ctx.strokeRect(this.pos.x * unit, this.pos.y * unit, this.size.x * unit, this.size.y * unit);\n    //\n    ctx.fillStyle = \"#000000\";\n    if (this.is_active) {\n      ctx.fillStyle = this.colors[0];\n      ctx.shadowBlur = unit / 4;\n      ctx.shadowColor = this.colors[1];\n    }\n    ctx.font = \"\" + Math.floor(5 / 4 * unit) + \"px Segment7\";\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"top\";\n    ctx.fillText(this.text, (this.pos.x + this.size.x / 2) * unit, (this.pos.y + 0.5) * unit);\n  }\n\n  onClick(pos) {\n    if (!this.active || this.lit) return;\n    const unit = this.root.unit;\n    const dx = pos.x - this.pos.x * unit;\n    const dy = pos.y - this.pos.y * unit;\n    this.lit = dx >= 0 && dx <= this.size.x * unit && dy >= 0 && dy <= this.size.y * unit;\n    if (this.lit) {\n      document.getElementById(\"click\").volume = 0.1;\n      document.getElementById(\"click\").play();\n      setTimeout(this.off.bind(this), 200);\n      this.on.call(this);\n    }\n  }\n}\n\nexport class P83MenuItem {\n  constructor(parent, pos, text, on_cb, off_cb) {\n    this.root = parent.root;\n    this.pos = pos;\n    this.text = text;\n    this.button = new P83Button(this, pos, new Vector(1, 1), on_cb, off_cb);\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n    ctx.fillStyle = colors.light[0];\n    ctx.shadowBlur = 0;\n    ctx.textAlign = \"left\";\n    ctx.font = `${Math.floor(unit * 0.8)}px Liberation`;\n    ctx.textBaseline = \"middle\";\n    ctx.fillText(this.text, (this.pos.x + 2) * unit, (this.pos.y + 0.5) * unit);\n    this.button.draw();\n  }\n\n  onClick(pos) {\n    this.button.onClick(pos);\n  }\n}\n\nexport class P83Display {\n  constructor(parent, pos, size) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.size = size;\n    this.value = \"\";\n    this.colors = colors.green;\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n    ctx.shadowBlur = 0;\n    ctx.fillStyle = this.colors[2];\n    ctx.strokeStyle = \"#101010\";\n    ctx.fillRect(this.pos.x * unit, this.pos.y * unit, (this.size * 0.71 + 0.5) * unit, 2 * unit);\n    ctx.strokeRect(this.pos.x * unit, this.pos.y * unit, (this.size * 0.71 + 0.5) * unit, 2 * unit);\n    //\n    ctx.fillStyle = this.colors[0];\n    ctx.shadowBlur = unit / 4;\n    ctx.shadowColor = this.colors[1];\n    ctx.font = `${Math.floor(5 / 4 * unit)}px Segment7`;\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"top\";\n    //\n    var text = this.value;\n    if (text.length > this.size) {\n      text = this.value.substring(text.length - this.size, text.length);\n    }\n    ctx.fillText(text, (this.pos.x + 0.25) * unit, (y + 0.5) * unit);\n  }\n}\n\nexport class P83Input {\n  constructor(parent, pos, size, id, cb) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.size = size;\n    this.callback = cb;\n    this.colors = colors.green;\n    this.input = document.getElementById(id);\n    this.input.value = \"\";\n    this.input.addEventListener(\"input\", this.onInput.bind(this));\n    this.input.addEventListener(\"keyup\", this.onKeyup.bind(this));\n    this.authorizedChars = \"\";\n    this.popping = false;\n  }\n\n  draw() {\n    const canvas = this.root.canvas;\n    const unit = this.root.unit;\n    this.input.style.left = \"\" + (canvas.offsetLeft + this.pos.x * unit) + \"px\";\n    this.input.style.top = \"\" + (canvas.offsetTop + this.pos.y * unit) + \"px\";\n    this.input.style.width = \"\" + (Math.floor((this.size * 0.71 + 0.5) * unit) - 2) + \"px\";\n    this.input.style.height = \"\" + (2 * unit - 2) + \"px\";\n    this.input.style.backgroundColor = colors.green[2];\n    this.input.style.font = \"\" + Math.floor(5 / 4 * unit) + \"px Segment7\";\n    this.input.style.color = colors.green[0];\n    this.input.style.textShadow = \"0 0 \" + Math.floor(unit / 4) + \"px \" + colors.green[1];\n    this.input.style.border = \"1px solid #101010\";\n  }\n\n  setup(authorizedChars) {\n    this.input.value = \"\";\n    this.authorizedChars = authorizedChars;\n  }\n\n  onInput() {\n    let correct = \"\";\n    for (const char of this.input.value) {\n      if (this.authorizedChars.indexOf(char) >= 0)\n        correct += char;\n    }\n    this.input.value = correct;\n  }\n\n  onKeyup(event) {\n    if (event.key === \"Enter\")\n      if (!this.popping) this.pop();\n  }\n\n  pop() {\n    this.popping = false;\n    if (this.input.value.length === 0) return;\n    if (this.callback(parseInt(this.input.value[0]))) {\n      this.input.value = this.input.value.slice(1);\n      this.popping = true;\n      setTimeout(this.pop.bind(this), 100);\n    }\n  }\n\n  show(shown) {\n    if (shown) {\n      this.input.style.visibility = \"visible\";\n      this.input.style.zIndex = \"1\";\n    } else {\n      this.input.style.visibility = \"hidden\";\n      this.input.style.zIndex = \"-1\";\n    }\n  }\n}\n\nexport class P83Number {\n  constructor(parent, pos, size) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.size = size;\n    this.value = NaN;\n    this.display = new P83Display(this, pos, size);\n  }\n\n  draw() {\n    let sign = \" \";\n    let digits = \"\";\n    let value = this.value;\n    if (isNaN(value)) {\n      this.display.value = \":-(\";\n    } else {\n      if (value < 0) {\n        sign = \"-\";\n        value *= -1;\n      }\n      for (let i = 1; i < this.size; i++) {\n        digits = `${value % 10}${digits}`\n        value = Math.floor(value / 10);\n      }\n      this.display.value = sign + digits;\n    }\n    this.display.draw();\n  }\n}\n",
    "import Vector from \"./vector.js\";\nimport { P83Button, P83LED, P83Number, P83Title } from \"./display.js\";\nimport { colors } from \"./consts.js\";\n\nexport class P83Targets {\n  constructor(positions, isTrackingOk) {\n    this.positions = [];\n    this.checked = [];\n    for (let i = 0; i < positions.length; i += 2) {\n      this.positions.push(new Vector(positions[i], positions[i + 1]));\n      this.checked.push(false);\n    }\n    this.isTrackingOk = isTrackingOk;\n  }\n\n  get nbChecked() {\n    return this.checked.filter(Boolean).length;\n  }\n\n  check(probe) {\n    let checkState = P83Targets.CHECK_STATE_POSITION;\n    for (let i = 0; i < this.positions.length; i++) {\n      const position = this.positions[i];\n      if (position.equal(probe.position())) {\n        if (this.isTrackingOk || probe.isMotionless()) {\n          checkState = P83Targets.CHECK_STATE_BOTH;\n          if (!this.checked[i]) {\n            this.checked[i] = true;\n          }\n        }\n      }\n    }\n    return checkState;\n  }\n\n  checkAll() {\n    return this.nbChecked === this.checked.length;\n  }\n\n  targetsString() {\n    const a_code = 'A'.charCodeAt(0);\n    return this.positions.map((p, i) => ` ${String.fromCharCode(a_code + i)}: (${p.toString()})`).join('\\n');\n  }\n\n  checkedString() {\n    const a_code = 'A'.charCodeAt(0);\n    return this.checked.map((b, i) => ([b, i])).filter(([b, _]) => b).map(([b, i]) => String.fromCharCode(a_code + i)).join(\" \");\n  }\n}\n\nP83Targets.CHECK_STATE_POSITION = Symbol();\nP83Targets.CHECK_STATE_BOTH = Symbol();\nP83Targets.CHECK_STATE_NONE = Symbol();\n\nexport class P83TargetSelector {\n  constructor(parent, pos, mission, callback) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.size = new Vector(14, 21);\n    this.mission = mission;\n    this.callback = callback;\n    this.title = new P83Title(this, this.pos, this.size, \"TARGET SELECTOR\");\n    this.led = new P83LED(this, Vector.add(this.pos, new Vector(2.5, 17.5)), 8);\n    this.numX = new P83Number(this, Vector.add(this.pos, new Vector(6, 15.5)), 8);\n    this.numY = new P83Number(this, Vector.add(this.pos, new Vector(6, 17.5)), 8);\n    this.buttons = [];\n    for (let i = 0; i < 20; i++) {\n      this.buttons.push(\n        new P83Button(\n          this,\n          Vector.add(\n            this.pos,\n            new Vector(\n              2 + 8 / 3 * (i % 4),\n              2 + 8 / 3 * Math.floor(i / 4)\n            )\n          ),\n          new Vector(2, 2),\n          String.fromCharCode('A'.charCodeAt(0) + i),\n          this.select.bind(this, i),\n          () => {\n          }\n        )\n      );\n    }\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n\n    ctx.fillStyle = \"#000000\";\n    ctx.shadowBlur = 0;\n    ctx.fillRect(this.x * unit, this.y * unit, this.w * unit, this.h * unit);\n    //\n    this.title.draw();\n    for (let i = 0; i < this.buttons.length; i++) {\n      this.buttons[i].draw();\n    }\n    this.led.draw();\n    //\n    ctx.fillStyle = colors.light[0];\n    ctx.shadowBlur = 0;\n    ctx.textAlign = \"left\";\n    ctx.font = \"\" + Math.floor(unit * 0.8) + \"px Liberation\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillText(\"X\", (this.x + 4) * unit, (this.y + 16.5) * unit);\n    ctx.fillText(\"Y\", (this.x + 4) * unit, (this.y + 18.5) * unit);\n\n    this.numX.draw();\n    this.numY.draw();\n  }\n\n  select(idx) {\n    for (let i = 0; i < this.mission.nbTargets; i++) {\n      this.buttons[i].lit = i === idx;\n    }\n    this.selected = idx;\n    this.callback(idx);\n    this.numX.value = this.mission.targets.positions[idx].x;\n    this.numY.value = this.mission.targets.positions[idx].y;\n    this.draw();\n  }\n\n  onClick(pos) {\n    for (const button of this.buttons) button.onClick(pos);\n  }\n}\n",
    "import Probe from \"./probe.js\";\nimport { P83Targets } from \"./targets.js\";\n\nexport default class P83Mission {\n  constructor(name, code, positions, diagAllowed, trackingAllowed, oxygen) {\n    this.name = name;\n    this.code = code;\n    this.probe = new Probe();\n    this.targets = new P83Targets(positions, trackingAllowed);\n    this.diagonalAllowed = diagAllowed;\n    this.trackingAllowed = trackingAllowed;\n    this.oxygenStartLevel = oxygen;\n    this.sequence = \"\";\n    this.isSpeedOk = true;\n    this.isAchieved = false;\n  }\n\n  get oxygenLevel() {\n    return this.oxygenStartLevel - this.sequence.length;\n  }\n\n  get nbTargets() {\n    return this.targets.positions.length;\n  }\n\n  move(thrust_id) {\n    if (thrust_id < 1 || thrust_id > 9) return;\n    this.sequence += thrust_id.toFixed();\n    this.probe.accelerate(thrust_id);\n\n    const checkState = this.targets.check(this.probe);\n    switch (checkState) {\n      case Targets.CHECK_STATE_POSITION:\n        this.isSpeedOk = false;\n        break;\n      case Targets.CHECK_STATE_BOTH:\n        this.isSpeedOk = true;\n        if (this.targets.checkAll()) {\n          this.isAchieved = true;\n        }\n        break;\n    }\n  }\n\n  toString() {\n    return trimLines(`MISSION: ${this.name}\n    TELEPORTATION CODE: ${this.code}\n    *** DESCRIPTION ***\n    TARGETS:\n    ${this.targets.targetsString()}\n    DIAGONAL THRUST: ${this.diagonalAllowed ? \"YES\" : \"NO\"}\n    TRACKING DEVICE: ${this.trackingAllowed ? \"YES\" : \"NO\"}\n    OXYGEN AT DEPARTURE: ${this.oxygenStartLevel}\n    \n    *** CURRENT STATUS ***\n    ${this.sequence.length === 0 ? \"\" : `SEQUENCE: ${this.sequence}`}\n    PROBE:\n    ${(this.probe.toString())}\n    VALIDATED TARGETS: ${this.nbTargets === 0 ? \"NONE\" : this.targets.checkedString()}\n    REMAINING OXYGEN: ${this.oxygenLevel}`);\n  }\n}\n\nfunction trimLines(input) {\n  return input.split('\\n').map(l => l.trim()).join('\\n');\n}\n",
    "import Vector from \"./vector.js\";\nimport { P83Button, P83Display, P83Input, P83LED, P83MenuItem, P83Number, P83Title } from \"./display.js\";\nimport { colors } from \"./consts.js\";\n\nexport class P83XYPanel {\n  constructor(parent, pos, title, vector) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.size = new Vector(14, 7);\n    this.title = new P83Title(this, this.pos, this.size, title);\n    this.vector = vector;\n    this.led = new P83LED(this, this.pos, this.size, title);\n    this.numX = new P83Number(this, Vector.add(this.pos, new Vector(6, 1.5)), 8)\n    this.numY = new P83Number(this, Vector.add(this.pos, new Vector(6, 3.5)), 8)\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n\n    ctx.fillStyle = \"#000000\";\n    ctx.shadowBlur = 0;\n    ctx.fillRect(this.pos.x * unit, this.pos.y * unit, this.size.x * unit, this.size.y * unit);\n    //\n    this.title.draw();\n    this.diod.draw();\n    //\n    ctx.fillStyle = colors.light[0];\n    ctx.shadowBlur = 0;\n    ctx.textAlign = \"left\";\n    ctx.font = \"\" + Math.floor(unit * 0.8) + \"px Liberation\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillText(\"X\", (this.pos.x + 4) * unit, (this.pos.y + 2.5) * unit);\n    ctx.fillText(\"Y\", (this.pos.x + 4) * unit, (this.pos.y + 4.5) * unit);\n    //\n    this.numX.value = this.vector.x;\n    this.numY.value = this.vector.y;\n    //\n    this.numX.draw();\n    this.numY.draw();\n  }\n}\n\n\nexport default class P83StatusPanel {\n  constructor(parent, pos, mission) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.size = new Vector(14, 7);\n    this.mission = mission;\n    this.title = new P83Title(this, this.pos, this.size, \"STATUS\");\n    this.oxygenLED = new P83LED(this, new Vector(this.pos.x + 2.5, this.pos.y + 2.5));\n    this.oxygenNum = new P83Number(this, new Vector(this.pos.x + 8, this.pos.y + 1.5), 5);\n    this.trackingLED = new P83LED(this, new Vector(this.pos.x + 2.5, this.pos.y + 4.5));\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n\n    ctx.fillStyle = \"#000000\";\n    ctx.shadowBlur = 0;\n    ctx.fillRect(this.pos.x * unit, this.pos.y * unit, this.size.x * unit, this.size.y * unit);\n    //\n    this.title.draw();\n    //\n    ctx.fillStyle = colors.light[0];\n    ctx.shadowBlur = 0;\n    ctx.textAlign = \"left\";\n    ctx.font = \"\" + Math.floor(unit * 0.8) + \"px Liberation\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillText(\"OXYGEN\", (this.pos.x + 4) * unit, (this.pos.y + 2.5) * unit);\n    ctx.fillText(\"TRACKING DEVICE\", (this.pos.x + 4) * unit, (this.pos.y + 4.5) * unit);\n    //\n    if (this.mission.oxygenLevel > 1) {\n      this.oxygenLED.colors = colors.green;\n    } else {\n      this.oxygenLED.colors = colors.red;\n    }\n    this.oxygenNum.value = this.mission.oxygenLevel;\n    if (this.mission.trackingAllowed) {\n      this.trackingLED.colors = colors.green;\n    } else {\n      this.trackingLED.colors = colors.red;\n    }\n\n    this.oxygenNum.draw();\n    this.oxygenLED.draw();\n    this.trackingLED.draw();\n  }\n}\n\n\nexport class P83ThrustPanel {\n  constructor(parent, pos, mission, move_cb) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.size = new Vector(14, 14);\n    this.mission = mission;\n    this.move_callback = move_cb;\n    this.title = new P83Title(this, this.pos, this.size, \"THRUST\");\n    this.diagonalAllowed = true;\n    this.buttons = [];\n    for (let i = 0; i < 9; i++) {\n      const pos = this.pos.copy();\n      pos.add(3.5 + 2.5 * (i % 3), 8.5 - 2.5 * Math.floor(i / 3));\n      const size = new Vector(2, 2);\n      this.buttons.push(new P83Button(this, pos, size, `${i + 1}`, this.move_callback.bind(this, i + 1)))\n    }\n\n    if (this.mission.diagonalAllowed)\n      for (const button of this.buttons) {\n        button.active = true;\n      }\n    else\n      for (let i = 0; i < 9; i++) {\n        this.buttons[i].active = i !== 4 && i % 2 === 0;\n      }\n  }\n\n  clear() {\n    for (const button of this.buttons) button.lit = false;\n    this.draw();\n  }\n\n  drawArrow(pos1, pos2, pos3) {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n    ctx.strokeStyle = colors.light[0];\n    ctx.shadowBlur = 0;\n    ctx.beginPath();\n    ctx.moveTo(pos1.x * unit, pos1.y * unit);\n    ctx.lineTo(pos2.x * unit, pos2.y * unit);\n    ctx.lineTo(pos3.x * unit, pos3.y * unit);\n    ctx.stroke();\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n\n    ctx.fillStyle = \"#000000\";\n    ctx.shadowBlur = 0;\n    ctx.fillRect(this.pos.x * unit, this.pos.y * unit, this.size.x * unit, this.size.y * unit);\n    //\n    this.title.draw();\n    for (let i = 0; i < this.buttons.length; i++) {\n      this.buttons[i].draw();\n    }\n\n    this.drawArrow(\n      Vector.add(this.pos, new Vector(3, 9.5)),\n      Vector.add(this.pos, new Vector(3, 11)),\n      Vector.add(this.pos, new Vector(4.5, 11))\n    );\n    this.drawArrow(\n      Vector.add(this.pos, new Vector(6, 11)),\n      Vector.add(this.pos, new Vector(7, 12)),\n      Vector.add(this.pos, new Vector(8, 11))\n    );\n    this.drawArrow(\n      Vector.add(this.pos, new Vector(11, 9.5)),\n      Vector.add(this.pos, new Vector(11, 11)),\n      Vector.add(this.pos, new Vector(9.5, 11))\n    );\n    this.drawArrow(\n      Vector.add(this.pos, new Vector(11, 6)),\n      Vector.add(this.pos, new Vector(12, 7)),\n      Vector.add(this.pos, new Vector(11, 8))\n    );\n    this.drawArrow(\n      Vector.add(this.pos, new Vector(11, 4.5)),\n      Vector.add(this.pos, new Vector(11, 3)),\n      Vector.add(this.pos, new Vector(9.5, 3))\n    );\n    this.drawArrow(\n      Vector.add(this.pos, new Vector(6, 3)),\n      Vector.add(this.pos, new Vector(7, 2)),\n      Vector.add(this.pos, new Vector(8, 3))\n    );\n    this.drawArrow(\n      Vector.add(this.pos, new Vector(3, 4.5)),\n      Vector.add(this.pos, new Vector(3, 3)),\n      Vector.add(this.pos, new Vector(4.5, 3))\n    );\n    this.drawArrow(\n      Vector.add(this.pos, new Vector(3, 6)),\n      Vector.add(this.pos, new Vector(2, 7)),\n      Vector.add(this.pos, new Vector(3, 8))\n    );\n  }\n\n  onClick(pos) {\n    for (const button of this.buttons) {\n      button.onClick(pos);\n    }\n  }\n}\n\nexport class P83SequencePanel {\n  constructor(parent, pos, mission, callback) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.mission = mission;\n    this.pos = pos;\n    this.size = new Vector(42, 7);\n    this.title = new P83Title(this, this.pos, this.size, \"THRUST SEQUENCE\");\n    this.sequence = new P83Display(this, Vector.add(this.pos, new Vector(9.75, 1.5)), 42);\n    this.sequenceInput = new P83Input(this, Vector.add(this.pos, new Vector(9.75, 3.5)), 42, \"input\", callback);\n\n    if (this.mission.diagonalAllowed)\n      this.sequenceInput.setup(\"123456789\");\n    else this.sequenceInput.setup(\"24568\");\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n\n    this.sequenceInput.show(true);\n    ctx.fillStyle = \"#000000\";\n    ctx.shadowBlur = 0;\n    ctx.fillRect(this.pos.x * unit, this.pos.y * unit, this.size.x * unit, this.size.y * unit);\n    //\n    this.title.draw();\n    //\n    ctx.fillStyle = colors.light[0];\n    ctx.shadowBlur = 0;\n    ctx.textAlign = \"left\";\n    ctx.font = \"\" + Math.floor(unit * 0.8) + \"px Liberation\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillText(\"SEQUENCE\", (this.pos.x + 2) * unit, (this.pos.y + 2.5) * unit);\n    ctx.fillText(\"KEYBOARD INPUT\", (this.pos.x + 2) * unit, (this.pos.y + 4.5) * unit);\n    //\n    this.sequence.value = this.mission.sequence;\n    this.sequence.draw();\n    this.sequenceInput.draw();\n  }\n}\n\nexport class P83MissionPanel {\n  constructor(parent, pos, mission, quit_cb) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.size = new Vector(14, 7);\n    this.mission = mission;\n    this.quitCallback = quit_cb;\n    this.title = new P83Title(this, this.pos, this.size, \"MISSION\");\n    this.printMenuItem = new P83MenuItem(this, Vector.add(this.pos, new Vector(2, 2)), \"PRINT\", this.draw.bind(this), this.print.bind(this));\n    this.quitMenuItem = new P83MenuItem(this, Vector.add(this.pos, new Vector(2, 4)), \"QUIT\", this.draw.bind(this), this.quit.bind(this));\n  }\n\n  print() {\n    this.printMenuItem.lit = false;\n    this.draw();\n    window.open(\"data:text,\" + encodeURI(this.mission.toString()), \"_blank\");\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n\n    ctx.fillStyle = \"#000\";\n    ctx.shadowBlur = 0;\n    ctx.fillRect(this.pos.x * unit, this.pos.y * unit, this.size.x * unit, this.size.y * unit);\n\n    this.title.draw();\n\n    this.printMenuItem.draw();\n    this.quitMenuItem.draw();\n  }\n\n  onClick(pos) {\n    this.printMenuItem.onClick(pos);\n    this.quitMenuItem.onClick(pos);\n  }\n\n  quit() {\n    this.quitMenuItem.lit = false;\n    this.draw();\n    this.quitCallback();\n  }\n}\n",
    "import { colors } from \"./consts.js\";\n\nexport default class P83Scope {\n  constructor(parent, pos, size, mission) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.size = size;\n    this.mission = mission;\n    this.selected = 0;\n    this.colors = colors.light;\n  }\n\n  computeDimensions() {\n    const positions = [...this.mission.targets.map(t => t.position), this.mission.probe.position];\n    const xPositions = positions.map(p => p.x);\n    this.min_x = Math.min(...xPositions);\n    this.max_x = Math.max(...xPositions);\n    const yPositions = positions.map(p => p.y);\n    this.min_y = Math.min(...yPositions);\n    this.max_y = Math.max(...yPositions);\n\n    const scale = Math.max(1, (this.max_x - this.min_x) / (this.size.x - 4), (this.max_y - this.min_y) / (this.size.y - 4));\n    const cx = (this.max_x + this.min_x) / 2;\n    const cy = (this.max_y + this.min_y) / 2;\n    this.min_x = cx - scale * (this.size.x - 2) / 2;\n    this.max_x = cx + scale * (this.size.x - 2) / 2;\n    this.min_y = cy - scale * (this.size.y - 2) / 2;\n    this.max_y = cy + scale * (this.size.y - 2) / 2;\n  }\n\n  drawGrid(size) {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n    const intensity = Math.min(1, ((this.size.x - 2) / (this.max_x - this.min_x) / 10 * size));\n    const color = `rgba(128, 255, 128, ${intensity})`;\n\n    ctx.strokeStyle = color;\n    ctx.shadowColor = color;\n    ctx.shadowBlur = 4 * intensity;\n    let tick_x = Math.ceil(this.min_x / size) * size;\n    while (tick_x < Math.ceil(this.max_x / size) * size) {\n      const x = this.pos.x + 1 + (tick_x - this.min_x) / (this.max_x - this.min_x) * (this.size.x - 2);\n      ctx.beginPath();\n      ctx.moveTo(x * unit, (this.pos.y + 1) * unit);\n      ctx.lineTo(x * unit, (this.pos.y + this.size.y - 1) * unit);\n      ctx.stroke();\n      tick_x += size;\n    }\n    let tick_y = Math.ceil(this.min_y / size) * size;\n    while (tick_y < Math.ceil(this.max_y / size) * size) {\n      const y = this.pos.y + 1 + (this.max_y - tick_y) / (this.max_y - this.min_y) * (this.size.y - 2);\n      ctx.beginPath();\n      ctx.moveTo((this.pos.x + 1) * unit, y * unit);\n      ctx.lineTo((this.pos.x + this.size.x - 1) * unit, y * unit);\n      ctx.stroke();\n      tick_y += size;\n    }\n  }\n\n  drawFullGrids() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n    ctx.shadowBlur = 0;\n    ctx.fillStyle = this.colors[2];\n    ctx.fillRect(this.pos.x * unit, this.pos.y * unit, this.size.x * unit, this.size.y * unit);\n    ctx.lineWidth = 0;\n    ctx.strokeStyle = this.colors[0];\n    ctx.shadowBlur = unit / 4;\n    ctx.shadowColor = this.colors[1];\n    ctx.strokeRect((this.pos.x + 1) * unit, (this.pos.y + 1) * unit, (this.size.x - 2) * unit, (this.size.y - 2) * unit);\n    //\n    var primary_size = Math.pow(10, Math.ceil(Math.log10((this.max_x - this.min_x) / (this.size.x - 2) * 10)));\n    primary_size = Math.max(100, primary_size);\n    this.drawGrid(primary_size / 100);\n    this.drawGrid(primary_size / 10);\n    this.drawGrid(primary_size);\n  }\n\n  drawElement(pos, isProbe, isSelected, isChecked) {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n    const x = this.pos.x + 1 + (pos.x - this.min_x) / (this.max_x - this.min_x) * (this.size.x - 2);\n    const y = this.pos.y + 1 + (this.max_y - pos.y) / (this.max_y - this.min_y) * (this.size.y - 2);\n    if (isSelected) {\n      ctx.strokeStyle = colors.green[0];\n      ctx.fillStyle = colors.green[0];\n    } else {\n      ctx.strokeStyle = colors.light[0];\n      ctx.fillStyle = colors.light[0];\n    }\n    if (isProbe) {\n      ctx.beginPath();\n      ctx.moveTo((x + 0.7) * unit, y * unit);\n      ctx.lineTo((x + 0.5) * unit, (y + 0.2) * unit);\n      ctx.lineTo((x + 0.5) * unit, (y + 0.5) * unit);\n      ctx.lineTo((x + 0.2) * unit, (y + 0.5) * unit);\n      ctx.lineTo(x * unit, (y + 0.7) * unit);\n      ctx.lineTo((x - 0.2) * unit, (y + 0.5) * unit);\n      ctx.lineTo((x - 0.5) * unit, (y + 0.5) * unit);\n      ctx.lineTo((x - 0.5) * unit, (y + 0.2) * unit);\n      ctx.lineTo((x - 0.7) * unit, y * unit);\n      ctx.lineTo((x - 0.5) * unit, (y - 0.2) * unit);\n      ctx.lineTo((x - 0.5) * unit, (y - 0.5) * unit);\n      ctx.lineTo((x - 0.2) * unit, (y - 0.5) * unit);\n      ctx.lineTo(x * unit, (y - 0.7) * unit);\n      ctx.lineTo((x + 0.2) * unit, (y - 0.5) * unit);\n      ctx.lineTo((x + 0.5) * unit, (y - 0.5) * unit);\n      ctx.lineTo((x + 0.5) * unit, (y - 0.2) * unit);\n      ctx.closePath();\n      ctx.stroke();\n    } else {\n      ctx.beginPath();\n      ctx.arc(x * unit, y * unit, unit / 3, 0, 2 * Math.PI, false);\n      ctx.stroke();\n      if (isSelected) ctx.fill();\n      if (isChecked) {\n        ctx.beginPath();\n        ctx.arc(x * unit, y * unit, unit / 2, 0, 2 * Math.PI, false);\n        ctx.stroke();\n      }\n    }\n  }\n\n  drawProbe() {\n    this.drawElement(this.mission.probe.position, true, false, false);\n  }\n\n  drawTargets() {\n    this.mission.targets.forEach((tgt, i) => {\n      this.drawElement(tgt.position, false, i === this.selected, this.mission.targets.checked[i])\n    });\n  }\n\n  draw() {\n    this.computeDimensions();\n    this.drawFullGrids();\n    this.drawProbe();\n    this.drawTargets();\n  }\n\n  select(idx) {\n    this.selected = idx;\n    this.draw();\n  }\n}\n",
    "import Vector from \"./vector.js\";\nimport { colors } from \"./consts.js\";\nimport { P83MenuItem } from \"./display.js\";\n\nexport default class P83Splash {\n  constructor(parent, pos, cb) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.size = new Vector(40, 7);\n    this.callback = cb;\n    this.text = \"\";\n    this.menuItem = new P83MenuItem(this, Vector.add(this.pos, new Vector(2, 4)), \"OK\", this.draw.bind(this), this.quit.bind(this));\n  }\n\n  setup(text) {\n    this.text = text;\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n\n    ctx.fillStyle = \"#000000\";\n    ctx.strokeStyle = colors.light[0];\n    ctx.shadowBlur = unit;\n    ctx.fillRect(this.pos.x * unit, this.pos.y * unit, this.size.x * unit, this.size.y * unit);\n    ctx.strokeRect(this.pos.x * unit, this.pos.y * unit, this.size.x * unit, this.size.y * unit);\n    //\n    ctx.shadowBlur = 0;\n    ctx.fillStyle = colors.light[0];\n    ctx.textAlign = \"left\";\n    ctx.font = \"\" + Math.floor(unit * 0.8) + \"px Liberation\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillText(this.text, (this.pos.x + 2) * unit, (this.pos.y + 2.5) * unit);\n    //\n    this.menuItem.draw();\n  }\n\n  quit() {\n    this.menuItem.button.lit = false;\n    this.callback();\n  }\n}\n",
    "import P83Mission from \"./mission.js\";\nimport { colors } from \"./consts.js\";\nimport P83StatusPanel, { P83MissionPanel, P83SequencePanel, P83ThrustPanel, P83XYPanel } from \"./panels.js\";\nimport Vector from \"./vector.js\";\nimport P83Scope from \"./scope.js\";\nimport P83Splash from \"./splash.js\";\nimport { P83TargetSelector } from \"./targets.js\";\n\nexport default class P83Controller {\n  constructor(parent, missionData, quit_cb) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.mission = new P83Mission(\n      missionData.name,\n      missionData.code,\n      missionData.positions,\n      missionData.diagonalAllowed,\n      missionData.trackingAllowed,\n      missionData.oxygen\n    );\n    this.quitCallback = quit_cb;\n\n    this.thrustPanel = new P83ThrustPanel(this, Vector.zero, this.mission, this.move.bind(this));\n    this.speedPanel = new P83XYPanel(this, new Vector(0, 14), \"SPEED\", this.mission.probe.speed);\n    this.positionPanel = new P83XYPanel(this, new Vector(0, 21), \"POSITION\", this.mission.probe.position);\n    this.scope = new P83Scope(this, new Vector(14, 0), new Vector(28, 28), this.mission);\n    this.statusPanel = new P83StatusPanel(this, new Vector(42, 0), this.mission);\n    this.targetSelector = new P83TargetSelector(this, new Vector(42, 7), this.mission, this.scope.select.bind(this));\n    this.sequencePanel = new P83SequencePanel(this, new Vector(0, 28), this.mission, this.move.bind(this));\n    this.missionPanel = new P83MissionPanel(this, new Vector(42, 28), this.mission, this.quit.bind(this));\n    this.splash = new P83Splash(this, new Vector(8, 16), this.quit.bind(this));\n    this.children = [\n      this.thrustPanel,\n      this.speedPanel,\n      this.positionPanel,\n      this.scope,\n      this.statusPanel,\n      this.targetSelector,\n      this.sequencePanel,\n      this.missionPanel\n    ]\n  }\n\n  draw() {\n    for (const child of this.children) {\n      child.draw();\n    }\n  }\n\n  setup(positions, diagonalAllowed, trackingAllowed, oxygen) {\n    this.mission.setup(\"NO NAME\", \"NO CODE\", positions, diagonalAllowed, trackingAllowed, oxygen);\n    this.thrustPanel.setup();\n  }\n\n  move(thrust) {\n    if (this.mission.oxygenLevel === 0) return false;\n    this.mission.move(thrust);\n    if (this.mission.isSpeedOk) {\n      this.statusPanel.trackingLED.blink(0);\n      this.speedPanel.led.colors = colors.green;\n    }\n  }\n\n  quit() {\n    this.statusPanel.oxygenLED.blink(0);\n    this.statusPanel.trackingLED.blink(0);\n    this.speedPanel.led.blink(0);\n    this.sequencePanel.sequenceInput.show(false);\n    this.quitCallback(this.mission.isAchieved);\n  }\n\n  onClick(pos) {\n    if (this.mission.isAchieved || this.mission.oxygenLevel <= 0) {\n      this.splash.onClick(pos);\n    } else {\n      this.thrustPanel.onClick(pos);\n      this.targetSelector.onClick(pos);\n      this.missionPanel.onClick(pos);\n    }\n  }\n}\n",
    "import P83Controller from \"./controller.js\";\nimport Vector from \"./vector.js\";\n\nexport default class P83Game {\n  constructor(canvasId, dataId) {\n    const data = JSON.parse(document.getElementById(dataId).innerText);\n    this.root = this;\n    this.canvas = document.getElementById(canvasId);\n    this.ctx = this.canvas.getContext('2d');\n    this.state = P83Game.GAME_STATE_MISSION;\n    this.controller = new P83Controller(this, data, done => {\n      if (!done) return;\n      const headers = new Headers();\n      headers.append(\"Content-Type\", \"application/json\");\n      fetch(window.location.pathname, {\n        method: \"POST\",\n        body: JSON.stringify({\n          sequence: this.controller.mission.sequence,\n          user: data.user,\n          level: data.level\n        }),\n        headers\n      }).then(r => {\n        if (r.status === 200) window.location.pathname = \"/\";\n        else {\n          this.controller.splash.setup(\"Sequence has not been verified!\");\n          this.controller.splash.draw();\n        }\n      }).catch(e => {\n        this.controller.splash.setup(`Error: ${e}`);\n        this.controller.splash.draw();\n      })\n    });\n\n    this.resize();\n    window.addEventListener(\"resize\", this.resize.bind(this));\n    this.canvas.addEventListener(\"click\", e => {\n      const x = e.pageX - this.canvas.offsetLeft;\n      const y = e.pageY - this.canvas.offsetTop;\n      this.controller.onClick(new Vector(x, y));\n    })\n  }\n\n  draw() {\n    this.ctx.fillStyle = \"#000\";\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    this.controller.draw();\n  }\n\n  resize() {\n    this.unit = Math.floor(Math.min(window.innerWidth / 56, window.innerHeight / 35));\n    this.canvas.width = 56 * this.unit;\n    this.canvas.height = 35 * this.unit;\n    this.draw();\n  }\n}\n\nP83Game.GAME_STATE_MAP = Symbol();\nP83Game.GAME_STATE_MISSION = Symbol();\n",
    "import Game from \"./game.js\";\n\nconst game = new Game(\"canvas\", \"data\");\n\ndocument.getElementById(\"music\").volume = 0.01;\ndocument.getElementById(\"music\").play();\n"
  ]
}
