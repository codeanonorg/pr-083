{"version":3,"sources":["consts.js","vector.js","probe.js","display.js","targets.js","mission.js","panels.js","scope.js","splash.js","controller.js","game.js","app.js"],"names":["colors","red","green","light","blue","P83Vector","x","y","other","fac","pos","size","Math","sqrt","a","b","add","zero","P83Probe","position","Vector","speed","thrust_id","acc","floor","addMut","equal","toString","P83Title","parent","title","root","ctx","unit","titleWidth","measureText","width","fillStyle","shadowBlur","font","textAlign","textBaseline","fillText","lineWidth","strokeStyle","beginPath","moveTo","lineTo","stroke","P83LED","lit","blinking","nbTimeouts","blip","document","getElementById","shadowColor","arc","PI","fill","state","draw","setTimeout","blink","volume","play","P83Button","text","on_cb","off_cb","onCb","noop","offCb","active","audio","fillRect","strokeRect","delta","scale","inRect","console","log","off","bind","call","P83MenuItem","button","textPos","onClick","P83Display","value","length","substring","P83Input","id","cb","callback","input","addEventListener","onInput","onKeyup","authorizedChars","popping","canvas","style","left","offsetLeft","top","offsetTop","height","backgroundColor","color","textShadow","border","correct","char","indexOf","event","key","pop","parseInt","slice","shown","visibility","zIndex","P83Number","NaN","display","sign","isNaN","toFixed","padStart","P83Targets","positions","isTrackingOk","checked","i","push","probe","checkState","CHECK_STATE_POSITION","isMotionless","CHECK_STATE_BOTH","nbChecked","a_code","charCodeAt","map","p","String","fromCharCode","join","filter","Boolean","Symbol","CHECK_STATE_NONE","P83TargetSelector","mission","led","numX","numY","selected","buttons","select","nbTargets","targets","idx","P83Mission","name","code","diagAllowed","trackingAllowed","oxygen","Probe","diagonalAllowed","oxygenStartLevel","sequence","isSpeedOk","isAchieved","accelerate","check","checkAll","trimLines","targetsString","checkedString","oxygenLevel","split","l","trim","P83XYPanel","vector","P83StatusPanel","oxygenLED","oxygenNum","trackingLED","P83ThrustPanel","move_cb","move_callback","pos1","pos2","pos3","drawArrow","P83SequencePanel","sequenceInput","setup","show","P83MissionPanel","quit_cb","quitCallback","printMenuItem","print","quitMenuItem","quit","window","open","encodeURI","P83Scope","xPositions","min_x","min","max_x","max","yPositions","min_y","max_y","cx","cy","intensity","tick_x","ceil","tick_y","primary_size","pow","log10","drawGrid","isProbe","isSelected","isChecked","closePath","drawElement","forEach","tgt","computeDimensions","drawFullGrids","drawProbe","drawTargets","P83Splash","menuItem","toUpperCase","P83Controller","missionData","thrustPanel","move","speedPanel","positionPanel","scope","statusPanel","targetSelector","sequencePanel","missionPanel","children","thrust","splash","P83Game","canvasId","dataId","data","JSON","parse","innerText","getContext","GAME_STATE_MISSION","controller","done","location","pathname","headers","Headers","append","fetch","method","body","stringify","user","level","then","r","status","reload","catch","e","resize","pageX","pageY","innerWidth","innerHeight","GAME_STATE_MAP","music","Game"],"mappings":"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","file":"app.js","sourceRoot":"..","sourcesContent":["export const colors = {\n  red: [\"#ff0000\", \"#ff8080\", \"#100000\"],\n  green: [\"#00ff00\", \"#80ff80\", \"#001000\"],\n  light: [\"#80ff80\", \"#80ff80\", \"#001000\"],\n  blue: [\"#0000ff\", \"#8080ff\", \"#000010\"]\n};\n","export default class P83Vector {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  get magnitude() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  static add(a, b) {\n    return a.add(b);\n  }\n\n  equal(other) {\n    return this.x === other.x && this.y === other.y;\n  }\n\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(other) {\n    return new P83Vector(this.x + other.x, this.y + other.y);\n  }\n\n  addMut(other) {\n    this.x += other.x;\n    this.y += other.y;\n  }\n\n  scale(fac) {\n    return new P83Vector(this.x * fac, this.y * fac);\n  }\n\n  scaleMut(fac) {\n    this.x *= fac;\n    this.y *= fac;\n  }\n\n  inRect(pos, size) {\n    return this.x > pos.x && this.x < (pos.x + size.x) && this.y > pos.y && this.y < (pos.y + size.y);\n  }\n\n  copy() {\n    return new P83Vector(this.x, this.y);\n  }\n\n  toString() {\n    return `P83Vector(${this.x}, ${this.y})`;\n  }\n}\n\nP83Vector.zero = new P83Vector(0, 0);\n","import Vector from \"./vector.js\";\n\nexport default class P83Probe {\n  constructor() {\n    this.position = new Vector(0, 0);\n    this.speed = new Vector(0, 0);\n  }\n\n  accelerate(thrust_id) {\n    const acc = new Vector((thrust_id - 1) % 3 - 1, Math.floor((thrust_id - 1) / 3) - 1);\n    this.speed.addMut(acc);\n    this.position.addMut(this.speed);\n  }\n\n  isMotionless() {\n    return this.speed.equal(Vector.zero);\n  }\n\n  toString() {\n    return `SPEED: ${this.speed.toString()}\\nPOSITION: ${this.position.toString()}`;\n  }\n}\n","import { colors } from \"./consts.js\";\nimport Vector from \"./vector.js\";\n\nexport class P83Title {\n  constructor(parent, pos, size, title) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.size = size;\n    this.title = title;\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n    const titleWidth = ctx.measureText(this.title).width;\n    ctx.fillStyle = colors.light[0];\n    ctx.shadowBlur = 0;\n    ctx.font = \"\" + Math.floor(unit * 0.8) + \"px 'Be Vietnam'\";\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillText(this.title, (this.pos.x + 2) * unit, (this.pos.y + 1) * unit);\n    //\n    ctx.lineWidth = 2;\n    ctx.strokeStyle = colors.light[0];\n    ctx.beginPath();\n    ctx.moveTo((this.pos.x + 1.5) * unit, (this.pos.y + 1) * unit);\n    ctx.lineTo((this.pos.x + 1) * unit, (this.pos.y + 1) * unit);\n    ctx.lineTo((this.pos.x + 1) * unit, (this.pos.y + 2) * unit);\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.moveTo((this.pos.x + 2.5) * unit + titleWidth, (this.pos.y + 1) * unit);\n    ctx.lineTo((this.pos.x + this.size.x - 1) * unit, (this.pos.y + 1) * unit);\n    ctx.lineTo((this.pos.x + this.size.x - 1) * unit, (this.pos.y + 2) * unit);\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.moveTo((this.pos.x + 1) * unit, (this.pos.y + this.size.y - 2) * unit);\n    ctx.lineTo((this.pos.x + 1) * unit, (this.pos.y + this.size.y - 1) * unit);\n    ctx.lineTo((this.pos.x + this.size.x - 1) * unit, (this.pos.y + this.size.y - 1) * unit);\n    ctx.lineTo((this.pos.x + this.size.x - 1) * unit, (this.pos.y + this.size.y - 2) * unit);\n    ctx.stroke();\n  }\n}\n\nexport class P83LED {\n  constructor(parent, pos) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.lit = true;\n    this.blinking = false;\n    this.nbTimeouts = 0;\n    this.colors = colors.green;\n    this.blip = document.getElementById(\"blip\");\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n\n    if (this.lit) {\n      ctx.fillStyle = this.colors[0];\n      ctx.strokeStyle = this.colors[0];\n      ctx.shadowBlur = unit;\n      ctx.shadowColor = this.colors[1];\n    } else {\n      ctx.strokeStyle = \"#101010\";\n      ctx.fillStyle = this.colors[2];\n      ctx.shadowBlur = 0;\n    }\n\n    ctx.beginPath();\n    ctx.arc(unit * this.pos.x, unit * this.pos.y, unit / 3, 0, 2 * Math.PI);\n    ctx.stroke();\n    ctx.fill();\n  }\n\n  blink(state) {\n    if (!this.blinking) return;\n    switch (state) {\n      case 0:\n        this.lit = true;\n        this.parent.draw();\n        break;\n      case 1:\n        if (this.nbTimeouts === 0) {\n          this.nbTimeouts = 1;\n          setTimeout(() => this.blink(2));\n        }\n        break;\n      case 2:\n        this.nbTimeouts--;\n        if (this.nbTimeouts > 0) return;\n        this.lit = !this.lit;\n        this.parent.draw();\n        if (this.lit) {\n          if (this.blip) {\n            this.blip.volume = 0.1;\n            this.blip.play();\n          }\n        }\n        this.nbTimeouts = 1;\n        setTimeout(() => this.blink(2), 300);\n        break;\n    }\n  }\n}\n\nexport class P83Button {\n  constructor(parent, pos, size, text, on_cb, off_cb) {\n    this.root = parent.root;\n    this.pos = pos;\n    this.size = size;\n    this.text = text;\n    this.onCb = on_cb || noop;\n    this.offCb = off_cb || noop;\n    this.active = true;\n    this.lit = false;\n    this.audio = document.getElementById(\"click\");\n    this.colors = colors.green;\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n    if (this.active) {\n      if (this.lit) {\n        this.colors = colors.light;\n      } else {\n        this.colors = colors.green;\n      }\n      ctx.shadowBlur = unit / 2;\n      ctx.fillStyle = this.colors[2];\n      ctx.strokeStyle = this.colors[0];\n      ctx.shadowColor = this.colors[1];\n    } else {\n      ctx.strokeStyle = \"#101010\";\n      ctx.fillStyle = this.colors[2];\n      ctx.shadowBlur = 0;\n    }\n    ctx.fillRect(this.pos.x * unit, this.pos.y * unit, this.size.x * unit, this.size.y * unit);\n    ctx.strokeRect(this.pos.x * unit, this.pos.y * unit, this.size.x * unit, this.size.y * unit);\n    //\n    ctx.fillStyle = \"#000000\";\n    if (this.active) {\n      ctx.fillStyle = this.colors[0];\n      ctx.shadowBlur = unit / 4;\n      ctx.shadowColor = this.colors[1];\n    }\n    ctx.font = \"\" + Math.floor(5 / 4 * unit) + \"px 'Nova Mono'\";\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"top\";\n    ctx.fillText(this.text, (this.pos.x + this.size.x / 2) * unit, (this.pos.y + 0.5) * unit);\n  }\n\n  onClick(pos) {\n    if (!this.active || this.lit) return;\n    const unit = this.root.unit;\n    const delta = pos.add(this.pos.scale(-unit));\n    this.lit = delta.inRect(Vector.zero, this.size.scale(unit));\n    if (this.lit) {\n      if (this.audio) {\n        this.audio.volume = 0.1;\n        this.audio.play();\n      }\n      console.log(\"click\");\n      setTimeout(this.off.bind(this), 200);\n      this.onCb.call(this);\n    }\n  }\n\n  off() {\n    this.lit = false;\n    this.offCb.call(this);\n    this.draw();\n  }\n}\n\nexport class P83MenuItem {\n  constructor(parent, pos, text, on_cb, off_cb) {\n    this.root = parent.root;\n    this.pos = pos;\n    this.text = text;\n    this.button = new P83Button(this, pos, new Vector(1, 1), \"\", on_cb, off_cb);\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n    const textPos = this.pos.add(new Vector(2, 0.5)).scale(unit);\n    ctx.fillStyle = colors.light[0];\n    ctx.shadowBlur = 0;\n    ctx.textAlign = \"left\";\n    ctx.font = `${Math.floor(unit * 0.8)}px 'Be Vietnam'`;\n    ctx.textBaseline = \"middle\";\n    ctx.fillText(this.text, textPos.x, textPos.y);\n    this.button.draw();\n  }\n\n  onClick(pos) {\n    this.button.onClick(pos);\n  }\n}\n\nexport class P83Display {\n  constructor(parent, pos, size) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.size = size;\n    this.value = \"\";\n    this.colors = colors.green;\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n    ctx.shadowBlur = 0;\n    ctx.fillStyle = this.colors[2];\n    ctx.strokeStyle = \"#101010\";\n    ctx.fillRect(this.pos.x * unit, this.pos.y * unit, (this.size * 0.71 + 0.5) * unit, 2 * unit);\n    ctx.strokeRect(this.pos.x * unit, this.pos.y * unit, (this.size * 0.71 + 0.5) * unit, 2 * unit);\n    //\n    ctx.fillStyle = this.colors[0];\n    ctx.shadowBlur = unit / 4;\n    ctx.shadowColor = this.colors[1];\n    ctx.font = `${Math.floor(5 / 4 * unit)}px 'Nova Mono'`;\n    ctx.textAlign = \"left\";\n    ctx.textBaseline = \"top\";\n\n    let text = this.value;\n    if (text.length > this.size) {\n      text = this.value.substring(text.length - this.size, text.length);\n    }\n    ctx.fillText(text, (this.pos.x + 0.25) * unit, (this.pos.y + 0.5) * unit);\n  }\n}\n\nexport class P83Input {\n  constructor(parent, pos, size, id, cb) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.size = size;\n    this.callback = cb;\n    this.colors = colors.green;\n    this.input = document.getElementById(id);\n    this.input.value = \"\";\n    this.input.addEventListener(\"input\", this.onInput.bind(this));\n    this.input.addEventListener(\"keyup\", this.onKeyup.bind(this));\n    this.authorizedChars = \"\";\n    this.popping = false;\n  }\n\n  draw() {\n    const canvas = this.root.canvas;\n    const unit = this.root.unit;\n    this.input.style.left = \"\" + (canvas.offsetLeft + this.pos.x * unit) + \"px\";\n    this.input.style.top = \"\" + (canvas.offsetTop + this.pos.y * unit) + \"px\";\n    this.input.style.width = \"\" + (Math.floor((this.size * 0.71 + 0.5) * unit) - 2) + \"px\";\n    this.input.style.height = \"\" + (2 * unit - 2) + \"px\";\n    this.input.style.backgroundColor = colors.green[2];\n    this.input.style.font = \"\" + Math.floor(5 / 4 * unit) + \"px 'Nova Mono'\";\n    this.input.style.color = colors.green[0];\n    this.input.style.textShadow = \"0 0 \" + Math.floor(unit / 4) + \"px \" + colors.green[1];\n    this.input.style.border = \"1px solid #101010\";\n  }\n\n  setup(authorizedChars) {\n    this.input.value = \"\";\n    this.authorizedChars = authorizedChars;\n  }\n\n  onInput() {\n    let correct = \"\";\n    for (const char of this.input.value) {\n      if (this.authorizedChars.indexOf(char) >= 0)\n        correct += char;\n    }\n    this.input.value = correct;\n  }\n\n  onKeyup(event) {\n    if (event.key === \"Enter\")\n      if (!this.popping) this.pop();\n  }\n\n  pop() {\n    this.popping = false;\n    if (this.input.value.length === 0) return;\n    if (this.callback(parseInt(this.input.value[0]))) {\n      this.input.value = this.input.value.slice(1);\n      this.popping = true;\n      setTimeout(this.pop.bind(this), 100);\n    }\n  }\n\n  show(shown) {\n    if (shown) {\n      this.input.style.visibility = \"visible\";\n      this.input.style.zIndex = \"1\";\n    } else {\n      this.input.style.visibility = \"hidden\";\n      this.input.style.zIndex = \"-1\";\n    }\n  }\n}\n\nexport class P83Number {\n  constructor(parent, pos, size) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.size = size;\n    this.value = NaN;\n    this.display = new P83Display(this, pos, size);\n  }\n\n  draw() {\n    let sign = \" \";\n    let digits = \"\";\n    let value = this.value;\n    if (isNaN(value)) {\n      this.display.value = \":-(\";\n    } else {\n      if (value < 0) {\n        sign = \"-\";\n        value *= -1;\n      }\n      this.display.value = sign + value.toFixed().padStart(this.size, '0');\n    }\n    this.display.draw();\n  }\n}\n\nfunction noop() {\n}\n","import { colors } from \"./consts.js\";\nimport { P83Button, P83LED, P83Number, P83Title } from \"./display.js\";\nimport Vector from \"./vector.js\";\n\nexport class P83Targets {\n  constructor(positions, isTrackingOk) {\n    this.positions = [];\n    this.checked = [];\n    for (let i = 0; i < positions.length; i += 2) {\n      this.positions.push(new Vector(positions[i], positions[i + 1]));\n      this.checked.push(false);\n    }\n    this.isTrackingOk = isTrackingOk;\n  }\n\n  get nbChecked() {\n    return this.checked.filter(Boolean).length;\n  }\n\n  check(probe) {\n    let checkState = P83Targets.CHECK_STATE_POSITION;\n    for (let i = 0; i < this.positions.length; i++) {\n      const position = this.positions[i];\n      if (position.equal(probe.position)) {\n        if (this.isTrackingOk || probe.isMotionless()) {\n          checkState = P83Targets.CHECK_STATE_BOTH;\n          if (!this.checked[i]) {\n            this.checked[i] = true;\n          }\n        }\n      }\n    }\n    return checkState;\n  }\n\n  checkAll() {\n    return this.nbChecked === this.checked.length;\n  }\n\n  targetsString() {\n    const a_code = 'A'.charCodeAt(0);\n    return this.positions.map((p, i) => ` ${String.fromCharCode(a_code + i)}: (${p.toString()})`).join('\\n');\n  }\n\n  checkedString() {\n    const a_code = 'A'.charCodeAt(0);\n    return this.checked.map((b, i) => ([b, i])).filter(([b, _]) => b).map(([b, i]) => String.fromCharCode(a_code + i)).join(\" \");\n  }\n}\n\nP83Targets.CHECK_STATE_POSITION = Symbol();\nP83Targets.CHECK_STATE_BOTH = Symbol();\nP83Targets.CHECK_STATE_NONE = Symbol();\n\nexport class P83TargetSelector {\n  constructor(parent, pos, mission, callback) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.size = new Vector(14, 21);\n    this.mission = mission;\n    this.callback = callback;\n    this.title = new P83Title(this, this.pos, this.size, \"TARGET SELECTOR\");\n    this.led = new P83LED(this, Vector.add(this.pos, new Vector(2.5, 17.5)), 8);\n    this.numX = new P83Number(this, Vector.add(this.pos, new Vector(6, 15.5)), 8);\n    this.numY = new P83Number(this, Vector.add(this.pos, new Vector(6, 17.5)), 8);\n    this.selected = 0;\n    this.buttons = [];\n    for (let i = 0; i < 20; i++) {\n      let button = new P83Button(\n        this,\n        Vector.add(\n          this.pos,\n          new Vector(\n            2 + 8 / 3 * (i % 4),\n            2 + 8 / 3 * Math.floor(i / 4)\n          )\n        ),\n        new Vector(2, 2),\n        String.fromCharCode('A'.charCodeAt(0) + i),\n        this.select.bind(this, i)\n      );\n      button.active = i < this.mission.nbTargets;\n      this.buttons.push(button);\n    }\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n\n    ctx.fillStyle = \"#000000\";\n    ctx.shadowBlur = 0;\n    ctx.fillRect(this.pos.x * unit, this.pos.y * unit, this.size.x * unit, this.size.y * unit);\n    //\n    this.title.draw();\n    for (let i = 0; i < this.buttons.length; i++) {\n      this.buttons[i].draw();\n    }\n    this.led.draw();\n    //\n    ctx.fillStyle = colors.light[0];\n    ctx.shadowBlur = 0;\n    ctx.textAlign = \"left\";\n    ctx.font = \"\" + Math.floor(unit * 0.8) + \"px 'Be Vietnam'\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillText(\"X\", (this.pos.x + 4) * unit, (this.pos.y + 16.5) * unit);\n    ctx.fillText(\"Y\", (this.pos.x + 4) * unit, (this.pos.y + 18.5) * unit);\n\n    const pos = this.numX.value = this.mission.targets.positions[this.selected];\n    this.numX.value = pos.x;\n    this.numY.value = pos.y;\n    this.numX.draw();\n    this.numY.draw();\n  }\n\n  select(idx) {\n    for (let i = 0; i < this.mission.nbTargets; i++) {\n      this.buttons[i].lit = i === idx;\n    }\n    this.selected = idx;\n    this.callback(idx);\n    this.draw();\n  }\n\n  onClick(pos) {\n    for (const button of this.buttons) button.onClick(pos);\n  }\n}\n","import Probe from \"./probe.js\";\nimport { P83Targets } from \"./targets.js\";\n\nexport default class P83Mission {\n  constructor(name, code, positions, diagAllowed, trackingAllowed, oxygen) {\n    this.name = name;\n    this.code = code;\n    this.probe = new Probe();\n    this.targets = new P83Targets(positions, trackingAllowed);\n    this.diagonalAllowed = diagAllowed;\n    this.trackingAllowed = trackingAllowed;\n    this.oxygenStartLevel = oxygen;\n    this.sequence = \"\";\n    this.isSpeedOk = true;\n    this.isAchieved = false;\n  }\n\n  get oxygenLevel() {\n    return this.oxygenStartLevel - this.sequence.length;\n  }\n\n  get nbTargets() {\n    return this.targets.positions.length;\n  }\n\n  move(thrust_id) {\n    if (thrust_id < 1 || thrust_id > 9) return;\n    this.sequence += thrust_id.toFixed();\n    this.probe.accelerate(thrust_id);\n\n    const checkState = this.targets.check(this.probe);\n    switch (checkState) {\n      case P83Targets.CHECK_STATE_POSITION:\n        this.isSpeedOk = false;\n        break;\n      case P83Targets.CHECK_STATE_BOTH:\n        this.isSpeedOk = true;\n        if (this.targets.checkAll()) {\n          this.isAchieved = true;\n        }\n        break;\n    }\n  }\n\n  toString() {\n    return trimLines(`MISSION: ${this.name}\n    TELEPORTATION CODE: ${this.code}\n    *** DESCRIPTION ***\n    TARGETS:\n    ${this.targets.targetsString()}\n    DIAGONAL THRUST: ${this.diagonalAllowed ? \"YES\" : \"NO\"}\n    TRACKING DEVICE: ${this.trackingAllowed ? \"YES\" : \"NO\"}\n    OXYGEN AT DEPARTURE: ${this.oxygenStartLevel}\n    \n    *** CURRENT STATUS ***\n    ${this.sequence.length === 0 ? \"\" : `SEQUENCE: ${this.sequence}`}\n    PROBE:\n    ${(this.probe.toString())}\n    VALIDATED TARGETS: ${this.nbTargets === 0 ? \"NONE\" : this.targets.checkedString()}\n    REMAINING OXYGEN: ${this.oxygenLevel}`);\n  }\n}\n\nfunction trimLines(input) {\n  return input.split('\\n').map(l => l.trim()).join('\\n');\n}\n","import { colors } from \"./consts.js\";\nimport { P83Button, P83Display, P83Input, P83LED, P83MenuItem, P83Number, P83Title } from \"./display.js\";\nimport Vector from \"./vector.js\";\n\nexport class P83XYPanel {\n  constructor(parent, pos, title, vector) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.size = new Vector(14, 7);\n    this.title = new P83Title(this, this.pos, this.size, title);\n    this.vector = vector;\n    this.led = new P83LED(this, this.pos.add(new Vector(2.5, 3.5)), this.size, title);\n    this.numX = new P83Number(this, Vector.add(this.pos, new Vector(6, 1.5)), 8, this.vector.x);\n    this.numY = new P83Number(this, Vector.add(this.pos, new Vector(6, 3.5)), 8, this.vector.y);\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n\n    ctx.fillStyle = \"#000000\";\n    ctx.shadowBlur = 0;\n    ctx.fillRect(this.pos.x * unit, this.pos.y * unit, this.size.x * unit, this.size.y * unit);\n    //\n    this.title.draw();\n    this.led.draw();\n    //\n    ctx.fillStyle = colors.light[0];\n    ctx.shadowBlur = 0;\n    ctx.textAlign = \"left\";\n    ctx.font = \"\" + Math.floor(unit * 0.8) + \"px 'Be Vietnam'\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillText(\"X\", (this.pos.x + 4) * unit, (this.pos.y + 2.5) * unit);\n    ctx.fillText(\"Y\", (this.pos.x + 4) * unit, (this.pos.y + 4.5) * unit);\n    //\n    this.numX.value = this.vector.x;\n    this.numY.value = this.vector.y;\n    //\n    this.numX.draw();\n    this.numY.draw();\n  }\n}\n\n\nexport default class P83StatusPanel {\n  constructor(parent, pos, mission) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.size = new Vector(14, 7);\n    this.mission = mission;\n    this.title = new P83Title(this, this.pos, this.size, \"STATUS\");\n    this.oxygenLED = new P83LED(this, new Vector(this.pos.x + 2.5, this.pos.y + 2.5));\n    this.oxygenNum = new P83Number(this, new Vector(this.pos.x + 8, this.pos.y + 1.5), 5);\n    this.trackingLED = new P83LED(this, new Vector(this.pos.x + 2.5, this.pos.y + 4.5));\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n\n    ctx.fillStyle = \"#000000\";\n    ctx.shadowBlur = 0;\n    ctx.fillRect(this.pos.x * unit, this.pos.y * unit, this.size.x * unit, this.size.y * unit);\n    //\n    this.title.draw();\n    //\n    ctx.fillStyle = colors.light[0];\n    ctx.shadowBlur = 0;\n    ctx.textAlign = \"left\";\n    ctx.font = \"\" + Math.floor(unit * 0.8) + \"px 'Be Vietnam'\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillText(\"OXYGEN\", (this.pos.x + 4) * unit, (this.pos.y + 2.5) * unit);\n    ctx.fillText(\"TRACKING DEVICE\", (this.pos.x + 4) * unit, (this.pos.y + 4.5) * unit);\n    //\n    if (this.mission.oxygenLevel > 1) {\n      this.oxygenLED.colors = colors.green;\n    } else {\n      this.oxygenLED.colors = colors.red;\n    }\n    this.oxygenNum.value = this.mission.oxygenLevel;\n    if (this.mission.trackingAllowed) {\n      this.trackingLED.colors = colors.green;\n    } else {\n      this.trackingLED.colors = colors.red;\n    }\n\n    this.oxygenNum.draw();\n    this.oxygenLED.draw();\n    this.trackingLED.draw();\n  }\n}\n\n\nexport class P83ThrustPanel {\n  constructor(parent, pos, mission, move_cb) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.size = new Vector(14, 14);\n    this.mission = mission;\n    this.move_callback = move_cb;\n    this.title = new P83Title(this, this.pos, this.size, \"THRUST\");\n    this.diagonalAllowed = true;\n    this.buttons = [];\n    for (let i = 0; i < 9; i++) {\n      const pos = Vector.add(this.pos, new Vector(3.5 + 2.5 * (i % 3), 8.5 - 2.5 * Math.floor(i / 3)));\n      const size = new Vector(2, 2);\n      this.buttons.push(new P83Button(this, pos, size, `${i + 1}`, this.move_callback.bind(this, i + 1)))\n    }\n\n    if (this.mission.diagonalAllowed)\n      for (const button of this.buttons) {\n        button.active = true;\n      }\n    else\n      for (let i = 0; i < 9; i++) {\n        this.buttons[i].active = i !== 4 && i % 2 === 0;\n      }\n  }\n\n  clear() {\n    for (const button of this.buttons) button.lit = false;\n    this.draw();\n  }\n\n  drawArrow(pos1, pos2, pos3) {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n    ctx.strokeStyle = colors.light[0];\n    ctx.shadowBlur = 0;\n    ctx.beginPath();\n    ctx.moveTo(pos1.x * unit, pos1.y * unit);\n    ctx.lineTo(pos2.x * unit, pos2.y * unit);\n    ctx.lineTo(pos3.x * unit, pos3.y * unit);\n    ctx.stroke();\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n\n    ctx.fillStyle = \"#000000\";\n    ctx.shadowBlur = 0;\n    ctx.fillRect(this.pos.x * unit, this.pos.y * unit, this.size.x * unit, this.size.y * unit);\n    //\n    this.title.draw();\n    for (let i = 0; i < this.buttons.length; i++) {\n      this.buttons[i].draw();\n    }\n\n    this.drawArrow(\n      Vector.add(this.pos, new Vector(3, 9.5)),\n      Vector.add(this.pos, new Vector(3, 11)),\n      Vector.add(this.pos, new Vector(4.5, 11))\n    );\n    this.drawArrow(\n      Vector.add(this.pos, new Vector(6, 11)),\n      Vector.add(this.pos, new Vector(7, 12)),\n      Vector.add(this.pos, new Vector(8, 11))\n    );\n    this.drawArrow(\n      Vector.add(this.pos, new Vector(11, 9.5)),\n      Vector.add(this.pos, new Vector(11, 11)),\n      Vector.add(this.pos, new Vector(9.5, 11))\n    );\n    this.drawArrow(\n      Vector.add(this.pos, new Vector(11, 6)),\n      Vector.add(this.pos, new Vector(12, 7)),\n      Vector.add(this.pos, new Vector(11, 8))\n    );\n    this.drawArrow(\n      Vector.add(this.pos, new Vector(11, 4.5)),\n      Vector.add(this.pos, new Vector(11, 3)),\n      Vector.add(this.pos, new Vector(9.5, 3))\n    );\n    this.drawArrow(\n      Vector.add(this.pos, new Vector(6, 3)),\n      Vector.add(this.pos, new Vector(7, 2)),\n      Vector.add(this.pos, new Vector(8, 3))\n    );\n    this.drawArrow(\n      Vector.add(this.pos, new Vector(3, 4.5)),\n      Vector.add(this.pos, new Vector(3, 3)),\n      Vector.add(this.pos, new Vector(4.5, 3))\n    );\n    this.drawArrow(\n      Vector.add(this.pos, new Vector(3, 6)),\n      Vector.add(this.pos, new Vector(2, 7)),\n      Vector.add(this.pos, new Vector(3, 8))\n    );\n  }\n\n  onClick(pos) {\n    for (const button of this.buttons) {\n      button.onClick(pos);\n    }\n  }\n}\n\nexport class P83SequencePanel {\n  constructor(parent, pos, mission, callback) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.mission = mission;\n    this.pos = pos;\n    this.size = new Vector(42, 7);\n    this.title = new P83Title(this, this.pos, this.size, \"THRUST SEQUENCE\");\n    this.sequence = new P83Display(this, Vector.add(this.pos, new Vector(9.75, 1.5)), 42);\n    this.sequenceInput = new P83Input(this, Vector.add(this.pos, new Vector(9.75, 3.5)), 42, \"input\", callback);\n\n    if (this.mission.diagonalAllowed)\n      this.sequenceInput.setup(\"123456789\");\n    else this.sequenceInput.setup(\"24568\");\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n\n    this.sequenceInput.show(true);\n    ctx.fillStyle = \"#000000\";\n    ctx.shadowBlur = 0;\n    ctx.fillRect(this.pos.x * unit, this.pos.y * unit, this.size.x * unit, this.size.y * unit);\n    //\n    this.title.draw();\n    //\n    ctx.fillStyle = colors.light[0];\n    ctx.shadowBlur = 0;\n    ctx.textAlign = \"left\";\n    ctx.font = \"\" + Math.floor(unit * 0.8) + \"px 'Be Vietnam'\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillText(\"SEQUENCE\", (this.pos.x + 2) * unit, (this.pos.y + 2.5) * unit);\n    ctx.fillText(\"KEYBOARD INPUT\", (this.pos.x + 2) * unit, (this.pos.y + 4.5) * unit);\n    //\n    this.sequence.value = this.mission.sequence;\n    this.sequence.draw();\n    this.sequenceInput.draw();\n  }\n}\n\nexport class P83MissionPanel {\n  constructor(parent, pos, mission, quit_cb) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.size = new Vector(14, 7);\n    this.mission = mission;\n    this.quitCallback = quit_cb;\n    this.title = new P83Title(this, this.pos, this.size, \"MISSION\");\n    this.printMenuItem = new P83MenuItem(this, Vector.add(this.pos, new Vector(2, 2)), \"PRINT\", this.draw.bind(this), this.print.bind(this));\n    this.quitMenuItem = new P83MenuItem(this, Vector.add(this.pos, new Vector(2, 4)), \"QUIT\", this.draw.bind(this), this.quit.bind(this));\n  }\n\n  print() {\n    this.printMenuItem.lit = false;\n    this.draw();\n    window.open(\"app:text,\" + encodeURI(this.mission.toString()), \"_blank\");\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n\n    ctx.fillStyle = \"#000\";\n    ctx.shadowBlur = 0;\n    ctx.fillRect(this.pos.x * unit, this.pos.y * unit, this.size.x * unit, this.size.y * unit);\n\n    this.title.draw();\n\n    this.printMenuItem.draw();\n    this.quitMenuItem.draw();\n  }\n\n  onClick(pos) {\n    this.printMenuItem.onClick(pos);\n    this.quitMenuItem.onClick(pos);\n  }\n\n  quit() {\n    this.quitMenuItem.lit = false;\n    this.draw();\n    this.quitCallback();\n  }\n}\n","import { colors } from \"./consts.js\";\n\nexport default class P83Scope {\n  constructor(parent, pos, size, mission) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.size = size;\n    this.mission = mission;\n    this.selected = 0;\n    this.colors = colors.light;\n  }\n\n  computeDimensions() {\n    const positions = [...this.mission.targets.positions, this.mission.probe.position];\n    const xPositions = positions.map(p => p.x);\n    this.min_x = Math.min(...xPositions);\n    this.max_x = Math.max(...xPositions);\n    const yPositions = positions.map(p => p.y);\n    this.min_y = Math.min(...yPositions);\n    this.max_y = Math.max(...yPositions);\n\n    const scale = Math.max(1, (this.max_x - this.min_x) / (this.size.x - 4), (this.max_y - this.min_y) / (this.size.y - 4));\n    const cx = (this.max_x + this.min_x) / 2;\n    const cy = (this.max_y + this.min_y) / 2;\n    this.min_x = cx - scale * (this.size.x - 2) / 2;\n    this.max_x = cx + scale * (this.size.x - 2) / 2;\n    this.min_y = cy - scale * (this.size.y - 2) / 2;\n    this.max_y = cy + scale * (this.size.y - 2) / 2;\n  }\n\n  drawGrid(size) {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n    const intensity = Math.min(1, ((this.size.x - 2) / (this.max_x - this.min_x) / 10 * size));\n    const color = `rgba(128, 255, 128, ${intensity})`;\n\n    ctx.strokeStyle = color;\n    ctx.shadowColor = color;\n    ctx.shadowBlur = 4 * intensity;\n    let tick_x = Math.ceil(this.min_x / size) * size;\n    while (tick_x < Math.ceil(this.max_x / size) * size) {\n      const x = this.pos.x + 1 + (tick_x - this.min_x) / (this.max_x - this.min_x) * (this.size.x - 2);\n      ctx.beginPath();\n      ctx.moveTo(x * unit, (this.pos.y + 1) * unit);\n      ctx.lineTo(x * unit, (this.pos.y + this.size.y - 1) * unit);\n      ctx.stroke();\n      tick_x += size;\n    }\n    let tick_y = Math.ceil(this.min_y / size) * size;\n    while (tick_y < Math.ceil(this.max_y / size) * size) {\n      const y = this.pos.y + 1 + (this.max_y - tick_y) / (this.max_y - this.min_y) * (this.size.y - 2);\n      ctx.beginPath();\n      ctx.moveTo((this.pos.x + 1) * unit, y * unit);\n      ctx.lineTo((this.pos.x + this.size.x - 1) * unit, y * unit);\n      ctx.stroke();\n      tick_y += size;\n    }\n  }\n\n  drawFullGrids() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n    ctx.shadowBlur = 0;\n    ctx.fillStyle = this.colors[2];\n    ctx.fillRect(this.pos.x * unit, this.pos.y * unit, this.size.x * unit, this.size.y * unit);\n    ctx.lineWidth = 0;\n    ctx.strokeStyle = this.colors[0];\n    ctx.shadowBlur = unit / 4;\n    ctx.shadowColor = this.colors[1];\n    ctx.strokeRect((this.pos.x + 1) * unit, (this.pos.y + 1) * unit, (this.size.x - 2) * unit, (this.size.y - 2) * unit);\n    //\n    var primary_size = Math.pow(10, Math.ceil(Math.log10((this.max_x - this.min_x) / (this.size.x - 2) * 10)));\n    primary_size = Math.max(100, primary_size);\n    this.drawGrid(primary_size / 100);\n    this.drawGrid(primary_size / 10);\n    this.drawGrid(primary_size);\n  }\n\n  drawElement(pos, isProbe, isSelected, isChecked) {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n    const x = this.pos.x + 1 + (pos.x - this.min_x) / (this.max_x - this.min_x) * (this.size.x - 2);\n    const y = this.pos.y + 1 + (this.max_y - pos.y) / (this.max_y - this.min_y) * (this.size.y - 2);\n    if (isSelected) {\n      ctx.strokeStyle = colors.green[0];\n      ctx.fillStyle = colors.green[0];\n    } else {\n      ctx.strokeStyle = colors.light[0];\n      ctx.fillStyle = colors.light[0];\n    }\n    if (isProbe) {\n      ctx.beginPath();\n      ctx.moveTo((x + 0.7) * unit, y * unit);\n      ctx.lineTo((x + 0.5) * unit, (y + 0.2) * unit);\n      ctx.lineTo((x + 0.5) * unit, (y + 0.5) * unit);\n      ctx.lineTo((x + 0.2) * unit, (y + 0.5) * unit);\n      ctx.lineTo(x * unit, (y + 0.7) * unit);\n      ctx.lineTo((x - 0.2) * unit, (y + 0.5) * unit);\n      ctx.lineTo((x - 0.5) * unit, (y + 0.5) * unit);\n      ctx.lineTo((x - 0.5) * unit, (y + 0.2) * unit);\n      ctx.lineTo((x - 0.7) * unit, y * unit);\n      ctx.lineTo((x - 0.5) * unit, (y - 0.2) * unit);\n      ctx.lineTo((x - 0.5) * unit, (y - 0.5) * unit);\n      ctx.lineTo((x - 0.2) * unit, (y - 0.5) * unit);\n      ctx.lineTo(x * unit, (y - 0.7) * unit);\n      ctx.lineTo((x + 0.2) * unit, (y - 0.5) * unit);\n      ctx.lineTo((x + 0.5) * unit, (y - 0.5) * unit);\n      ctx.lineTo((x + 0.5) * unit, (y - 0.2) * unit);\n      ctx.closePath();\n      ctx.stroke();\n    } else {\n      ctx.beginPath();\n      ctx.arc(x * unit, y * unit, unit / 3, 0, 2 * Math.PI, false);\n      ctx.stroke();\n      if (isSelected) ctx.fill();\n      if (isChecked) {\n        ctx.beginPath();\n        ctx.arc(x * unit, y * unit, unit / 2, 0, 2 * Math.PI, false);\n        ctx.stroke();\n      }\n    }\n  }\n\n  drawProbe() {\n    this.drawElement(this.mission.probe.position, true, false, false);\n  }\n\n  drawTargets() {\n    this.mission.targets.positions.forEach((tgt, i) => {\n      this.drawElement(tgt, false, i === this.selected, this.mission.targets.checked[i])\n    });\n  }\n\n  draw() {\n    this.computeDimensions();\n    this.drawFullGrids();\n    this.drawProbe();\n    this.drawTargets();\n  }\n\n  select(idx) {\n    this.selected = idx;\n    this.draw();\n  }\n}\n","import { colors } from \"./consts.js\";\nimport { P83MenuItem } from \"./display.js\";\nimport Vector from \"./vector.js\";\n\nexport default class P83Splash {\n  constructor(parent, pos, cb) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.pos = pos;\n    this.size = new Vector(40, 7);\n    this.callback = cb || (() => {\n    });\n    this.text = \"\";\n    this.menuItem = new P83MenuItem(this, Vector.add(this.pos, new Vector(2, 4)), \"OK\", this.draw.bind(this), this.quit.bind(this));\n  }\n\n  show(text) {\n    this.text = text.toUpperCase();\n    this.parent.draw();\n    this.draw();\n  }\n\n  draw() {\n    const ctx = this.root.ctx;\n    const unit = this.root.unit;\n\n    ctx.fillStyle = \"#000000\";\n    ctx.strokeStyle = colors.light[0];\n    ctx.shadowBlur = unit;\n    ctx.fillRect(this.pos.x * unit, this.pos.y * unit, this.size.x * unit, this.size.y * unit);\n    ctx.strokeRect(this.pos.x * unit, this.pos.y * unit, this.size.x * unit, this.size.y * unit);\n    //\n    ctx.shadowBlur = 0;\n    ctx.fillStyle = colors.light[0];\n    ctx.textAlign = \"left\";\n    ctx.font = \"\" + Math.floor(unit * 0.8) + \"px Liberation\";\n    ctx.textBaseline = \"middle\";\n    ctx.fillText(this.text, (this.pos.x + 2) * unit, (this.pos.y + 2.5) * unit);\n    //\n    this.menuItem.draw();\n  }\n\n  onClick(pos) {\n    this.menuItem.onClick(pos);\n  }\n\n  quit() {\n    this.menuItem.button.lit = false;\n    this.callback();\n  }\n}\n","import { colors } from \"./consts.js\";\nimport P83Mission from \"./mission.js\";\nimport P83StatusPanel, { P83MissionPanel, P83SequencePanel, P83ThrustPanel, P83XYPanel } from \"./panels.js\";\nimport P83Scope from \"./scope.js\";\nimport P83Splash from \"./splash.js\";\nimport { P83TargetSelector } from \"./targets.js\";\nimport Vector from \"./vector.js\";\n\nexport default class P83Controller {\n  constructor(parent, missionData, quit_cb) {\n    this.parent = parent;\n    this.root = this.parent.root;\n    this.mission = new P83Mission(\n      missionData.name,\n      missionData.code,\n      missionData.positions,\n      missionData.diagonalAllowed,\n      missionData.trackingAllowed,\n      missionData.oxygen\n    );\n    this.quitCallback = quit_cb;\n\n    this.thrustPanel = new P83ThrustPanel(this, Vector.zero, this.mission, this.move.bind(this));\n    this.speedPanel = new P83XYPanel(this, new Vector(0, 14), \"SPEED\", this.mission.probe.speed);\n    this.positionPanel = new P83XYPanel(this, new Vector(0, 21), \"POSITION\", this.mission.probe.position);\n    this.scope = new P83Scope(this, new Vector(14, 0), new Vector(28, 28), this.mission);\n    this.statusPanel = new P83StatusPanel(this, new Vector(42, 0), this.mission);\n    this.targetSelector = new P83TargetSelector(this, new Vector(42, 7), this.mission, this.scope.select.bind(this));\n    this.sequencePanel = new P83SequencePanel(this, new Vector(0, 28), this.mission, this.move.bind(this));\n    this.missionPanel = new P83MissionPanel(this, new Vector(42, 28), this.mission, this.quit.bind(this));\n    this.children = [\n      this.thrustPanel,\n      this.speedPanel,\n      this.positionPanel,\n      this.scope,\n      this.statusPanel,\n      this.targetSelector,\n      this.sequencePanel,\n      this.missionPanel\n    ]\n  }\n\n  draw() {\n    for (const child of this.children) {\n      child.draw();\n    }\n  }\n\n  move(thrust) {\n    if (this.mission.oxygenLevel === 0) return false;\n    this.mission.move(thrust);\n    if (this.mission.isSpeedOk) {\n      this.statusPanel.trackingLED.blink(0);\n      this.speedPanel.led.colors = colors.green;\n    } else {\n      this.statusPanel.trackingLED.blink(1);\n      this.speedPanel.led.colors = colors.red;\n      this.speedPanel.led.blink(1);\n    }\n    if (this.mission.oxygenLevel <= 0) {\n      this.statusPanel.oxygenLED.blink(1);\n    }\n\n    this.root.draw();\n    if (this.mission.isAchieved) {\n      this.quit();\n    } else if (this.mission.oxygenLevel <= 0) {\n      this.splash = P83Splash(this, new Vector(8, 16), this.quit.bind(this));\n      this.splash.show(`You ran out of oxygen before achieving mission ${this.mission.name}!`);\n    }\n    return true;\n  }\n\n  quit() {\n    this.statusPanel.oxygenLED.blink(0);\n    this.statusPanel.trackingLED.blink(0);\n    this.speedPanel.led.blink(0);\n    this.sequencePanel.sequenceInput.show(false);\n    this.quitCallback(this.mission.isAchieved);\n  }\n\n  onClick(pos) {\n    if (this.splash) this.splash.onClick(pos);\n    else {\n      this.thrustPanel.onClick(pos);\n      this.targetSelector.onClick(pos);\n      this.missionPanel.onClick(pos);\n    }\n  }\n}\n","import P83Controller from \"./controller.js\";\nimport P83Splash from \"./splash.js\";\nimport Vector from \"./vector.js\";\n\nexport default class P83Game {\n  constructor(canvasId, dataId) {\n    const data = JSON.parse(document.getElementById(dataId).innerText);\n    console.log({ data });\n    this.root = this;\n    this.canvas = document.getElementById(canvasId);\n    this.ctx = this.canvas.getContext('2d');\n    this.state = P83Game.GAME_STATE_MISSION;\n    this.splash = null;\n    this.controller = new P83Controller(this, data, done => {\n      if (!done) window.location.pathname = \"/\";\n      const headers = new Headers();\n      headers.append(\"Content-Type\", \"application/json\");\n      fetch(window.location.pathname, {\n        method: \"POST\",\n        body: JSON.stringify({\n          sequence: this.controller.mission.sequence,\n          user: data.user,\n          level: data.level\n        }),\n        headers\n      }).then(r => {\n        this.splash = new P83Splash(this, new Vector(8, 16), () => {\n          if (r.status === 200) window.location.pathname = \"/\";\n          else window.location.reload();\n        });\n        if (r.status === 200) {\n          this.splash.show(\"Mission accomplished!\");\n        } else {\n          this.splash.show(\"Sequence has not been verified!\");\n        }\n      }).catch(e => {\n        this.splash = new P83Splash(this, new Vector(8, 16), () => {\n          window.location.reload();\n        });\n        this.splash.show(`Error: ${e}`);\n      })\n    });\n\n    this.resize();\n    window.addEventListener(\"resize\", this.resize.bind(this));\n    this.canvas.addEventListener(\"click\", e => {\n      const x = e.pageX - this.canvas.offsetLeft;\n      const y = e.pageY - this.canvas.offsetTop;\n      let pos = new Vector(x, y);\n      if (this.splash) this.splash.onClick(pos);\n      else this.controller.onClick(pos);\n    })\n  }\n\n  draw() {\n    this.ctx.fillStyle = \"#000\";\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    this.controller.draw();\n  }\n\n  resize() {\n    this.unit = Math.floor(Math.min(window.innerWidth / 56, window.innerHeight / 35));\n    this.canvas.width = 56 * this.unit;\n    this.canvas.height = 35 * this.unit;\n    this.draw();\n  }\n}\n\nP83Game.GAME_STATE_MAP = Symbol();\nP83Game.GAME_STATE_MISSION = Symbol();\n","import Game from \"./game.js\";\n\nconst music = document.getElementById(\"music\");\nif (music) {\n  music.volume = 0.01;\n  music.play();\n}\ndocument.addEventListener(\"load\", () => {\n});\n\n(function () {\n  new Game(\"canvas\", \"data\");\n})();\n"]}